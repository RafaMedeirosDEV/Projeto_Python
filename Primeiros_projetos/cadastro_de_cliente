from tkinter import *
from tkinter import ttk
import sqlite3

janela = Tk()


class Funcoes():


    def limpar_tela(self):
        self.entry_cpf.delete(0, END)
        self.entry_telefone.delete(0, END)
        self.entry_nome.delete(0, END)
        self.entry_sobrenome.delete(0, END)
        self.entry_descricao_pessoa.delete(0, END)
        self.entry_endereco.delete(0, END)
        self.entry_numero.delete(0, END)
        self.entry_bairro.delete(0, END)
        self.entry_cidade.delete(0, END)
        self.entry_data_comemorativa.delete(0, END)
        self.entry_descricao_data.delete(0, END)

    def conexao_bd(self):
        self.conexao = sqlite3.connect('cliente.db')
        self.cursor = self.conexao.cursor()

    def desconecta_bd(self):
        self.conexao.close()

    def montarTabela(self):
        self.conexao_bd();
        print(f'Conectado ao Banco de Dados')
        # Criando a Tabela
        self.cursor.execute("""
            CREATE TABLE IF NOT EXISTS cliente(
                cpf INTEGER(11) NOT NULL,
                telefone INTEGER(11)NOT NULL,
                nome TEXT(20) NOT NUll,
                sobrenome TEXT(20),
                descricao TEXT(30),
                endereco TEXT(30),
                numero VARCHAR(10),
                bairro TEXT(20),
                cidade TEXT(20),
                data_comemorativa CHAR(40),
                data TEXT(10));
        """)
        self.conexao.commit()
        self.desconecta_bd()

    def novo_cliente(self):
        self.cpf = self.entry_cpf.get()
        self.telefone = self.entry_telefone.get()
        self.nome = self.entry_nome.get()
        self.sobrenome = self.entry_sobrenome.get()
        self.descricao = self.entry_descricao_pessoa.get()
        self.endereco = self.entry_endereco.get()
        self.numero = self.entry_numero.get()
        self.bairro = self.entry_bairro.get()
        self.cidade = self.entry_cidade.get()
        self.comemorativa = self.entry_data_comemorativa.get()
        self.data = self.entry_descricao_data.get()

        self.conexao_bd()

        self.cursor.execute(""" INSERT INTO cliente (cpf,telefone,nome,sobrenome,descricao,endereco,numero,bairro,cidade,data_comemorativa,data)
            VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)""", (self.cpf, self.telefone, self.nome, self.sobrenome, self.descricao, self.endereco, self.numero, self.bairro,self.cidade, self.comemorativa, self.data))
        self.conexao.commit()
        self.desconecta_bd()
        self.selecionar_lista()
        self.limpar_tela()

    def selecionar_lista(self):
        self.lista_cliente.delete(*self.lista_cliente.get_children())
        self.conexao_bd()
        lista = self.cursor.execute(""" SELECT cpf,telefone,nome,sobrenome,descricao,endereco,numero,bairro,cidade,data_comemorativa,data FROM clientes
            ORDER BY nome ASC; """)
        for i in lista:
            self.lista_cliente.insert("",END,values=i)
        self.desconecta_bd()

class Aplicacao(Funcoes):
    def __init__(self):
        self.tela()
        self.frames_da_tela()
        self.botoes_frame1()
        self.label_frame1()
        self.entry_frame1()
        self.tela_frame2()
        self.conexao_bd()
        self.desconecta_bd()
        janela.mainloop()

    def tela(self):
        janela.title('CADATRO DE CLIENTES')
        janela.geometry('1000x650')
        janela.configure(background="#FF9999")

    def frames_da_tela(self):
        self.frame1 = Frame(janela)
        self.frame1.place(relx=0.02, rely=0.02, relwidth=0.96, relheight=0.48)
        self.frame1.configure(background='#FF9999')

        self.frame2 = Frame(janela)
        self.frame2.place(relx=0.02, rely=0.45, relwidth=0.96, relheight=0.51)
        self.frame2.configure(background='white', bd=4, highlightbackground='pink', highlightthickness=3)

    def botoes_frame1(self):
        self.bt_buscar = Button(self.frame1, text='Buscar', bd=4, bg='LightPink', font=('verdana', 10, 'bold'))
        self.bt_buscar.place(relx=0.90, rely=0.0, relwidth=0.1, relheight=0.155)

        self.bt_alterar = Button(self.frame1, text='Alterar', bd=4, bg='LightPink', font=('verdana', 10, 'bold'))
        self.bt_alterar.place(relx=0.90, rely=0.165, relwidth=0.1, relheight=0.155)

        self.bt_cadastrar = Button(self.frame1, text="Cadastrar", bd=4, bg='LightPink', font=('verdana', 10, 'bold'),command=self.novo_cliente)
        self.bt_cadastrar.place(relx=0.90, rely=0.335, relwidth=0.1, relheight=0.155)

        self.bt_limpar = Button(self.frame1, text='Limpar', bd=4, bg='LightPink', font=('verdana', 10, 'bold'),command=self.limpar_tela)
        self.bt_limpar.place(relx=0.90, rely=0.505, relwidth=0.1, relheight=0.155)

        self.bt_deletar = Button(self.frame1, text='Deletar', bd=4, bg='LightPink', font=('verdana', 10, 'bold'))
        self.bt_deletar.place(relx=0.90, rely=0.675, relwidth=0.1, relheight=0.155)

    def label_frame1(self):
        self.lb_cpf = Label(self.frame1, text='CPF', bd=4, font=('verdana', 10, 'bold'))
        self.lb_cpf.place(relx=0.0, rely=0.0, relwidth=0.1, relheight=0.11)

        self.lb_telefone = Label(self.frame1, text='Telefone', bd=4, font=('verdana', 10, 'bold'))
        self.lb_telefone.place(relx=0.4, rely=0.0, relwidth=0.1, relheight=0.11)

        self.lb_nome = Label(self.frame1, text='Nome', bd=4, font=('verdana', 10, 'bold'))
        self.lb_nome.place(relx=0.0, rely=0.14, relwidth=0.1, relheight=0.11)

        self.lb_sobrenome = Label(self.frame1, text='Sobrenome', font=('verdana', 10, 'bold'))
        self.lb_sobrenome.place(relx=0.5, rely=0.14, relwidth=0.1, relheight=0.11)

        self.lb_descricao_pessoa = Label(self.frame1, text='Descrição', bd=4, font=('verdana', 10, 'bold'))
        self.lb_descricao_pessoa.place(relx=0.0, rely=0.28, relwidth=0.1, relheight=0.11)

        self.lb_endereco = Label(self.frame1, text='Endereço', bd=4, font=('verdana', 10, 'bold'))
        self.lb_endereco.place(relx=0.0, rely=0.42, relwidth=0.1, relheight=0.11)

        self.lb_numero = Label(self.frame1, text='Nº', bd=4, font=('verdana', 10, 'bold'))
        self.lb_numero.place(relx=0.6, rely=0.42, relwidth=0.05, relheight=0.11)

        self.lb_bairro = Label(self.frame1, text='Bairro', bd=4, font=('verdana', 10, 'bold'))
        self.lb_bairro.place(relx=0.0, rely=0.56, relwidth=0.1, relheight=0.11)

        self.lb_cidade = Label(self.frame1, text='Cidade', bd=4, font=('verdana', 10, 'bold'))
        self.lb_cidade.place(relx=0.5, rely=0.56, relwidth=0.1, relheight=0.11)

        self.lb_descricao_data = Label(self.frame1, text='Descrição da Data', bd=4, font=('verdana', 10, 'bold'))
        self.lb_descricao_data.place(relx=0, rely=0.7, relwidth=0.2, relheight=0.11)

    def entry_frame1(self):
        self.entry_cpf = Entry(self.frame1, font=('verdana', 12))
        self.entry_cpf.place(relx=0.12, rely=0, relwidth=0.26, relheight=0.11)

        self.entry_telefone = Entry(self.frame1,font=('verdana', 12))
        self.entry_telefone.place(relx=0.52, rely=0, relwidth=0.35, relheight=0.11)

        self.entry_nome = Entry(self.frame1,font=('verdana', 12))
        self.entry_nome.place(relx=0.12, rely=0.14, relwidth=0.36, relheight=0.11)

        self.entry_sobrenome = Entry(self.frame1,font=('verdana', 12))
        self.entry_sobrenome.place(relx=0.62, rely=0.14, relwidth=0.25, relheight=0.11)

        self.entry_descricao_pessoa = Entry(self.frame1,font=('verdana', 12))
        self.entry_descricao_pessoa.place(relx=0.12, rely=0.28, relwidth=0.75, relheight=0.11)

        self.entry_endereco = Entry(self.frame1,font=('verdana', 12))
        self.entry_endereco.place(relx=0.12, rely=0.42, relwidth=0.46, relheight=0.11)

        self.entry_numero = Entry(self.frame1,font=('verdana', 12))
        self.entry_numero.place(relx=0.67, rely=0.42, relwidth=0.2, relheight=0.11)

        self.entry_bairro = Entry(self.frame1,font=('verdana', 12))
        self.entry_bairro.place(relx=0.12, rely=0.56, relwidth=0.36, relheight=0.11)

        self.entry_cidade = Entry(self.frame1,font=('verdana', 12))
        self.entry_cidade.place(relx=0.62, rely=0.56, relwidth=0.25, relheight=0.11)

        self.entry_data_comemorativa = Entry(self.frame1,font=('verdana', 12))
        self.entry_data_comemorativa.place(relx=0.72, rely=0.7, relwidth=0.15, relheight=0.11)

        self.entry_descricao_data = Entry(self.frame1,font=('verdana', 12))
        self.entry_descricao_data.place(relx=0.22, rely=0.7, relwidth=0.48, relheight=0.11)

    def tela_frame2(self):
        self.lista_cliente = ttk.Treeview(self.frame2, height=3, columns=("col1", "col2", "col3", "col4", "col5", "col6", "col7", "col8", "col9", "col10", "col11"))

        self.lista_cliente.heading("#0", text='')
        self.lista_cliente.heading("#1", text='CPF')
        self.lista_cliente.heading("#2", text='Telefone')
        self.lista_cliente.heading("#3", text='Nome')
        self.lista_cliente.heading("#4", text="Sobrenome")
        self.lista_cliente.heading("#5", text="Descrição")
        self.lista_cliente.heading("#6", text="Endereço")
        self.lista_cliente.heading("#7", text="Nº")
        self.lista_cliente.heading("#8", text="Bairro")
        self.lista_cliente.heading("#9", text="Cidade")
        self.lista_cliente.heading("#10", text="Comemoração")
        self.lista_cliente.heading("#11", text="Data")

        self.lista_cliente.column("#0", width=1)
        self.lista_cliente.column("#1", width=70)
        self.lista_cliente.column("#2", width=70)
        self.lista_cliente.column("#3", width=120)
        self.lista_cliente.column("#4", width=70)
        self.lista_cliente.column("#5", width=70)
        self.lista_cliente.column("#6", width=100)
        self.lista_cliente.column("#7", width=25)
        self.lista_cliente.column("#8", width=50)
        self.lista_cliente.column("#9", width=50)
        self.lista_cliente.column("#10", width=90)
        self.lista_cliente.column("#11", width=40)

        self.lista_cliente.place(relx=0.005, rely=0.005, relwidth=0.96, relheight=0.98)

        self.scrolLista = Scrollbar(self.frame2, orient='vertical')
        self.lista_cliente.configure(yscroll=self.scrolLista.set)
        self.scrolLista.place(relx=0.97, rely=0.01, relwidth=0.03, relheight=0.97)


Aplicacao()
